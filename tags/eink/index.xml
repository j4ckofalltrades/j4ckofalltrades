<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>eink on /home/jordan</title><link>https://jduabe.dev/tags/eink/</link><description>Recent content in eink on /home/jordan</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 16 Jun 2023 21:00:00 +0800</lastBuildDate><atom:link href="https://jduabe.dev/tags/eink/index.xml" rel="self" type="application/rss+xml"/><item><title>Playing around with the Badger2040</title><link>https://jduabe.dev/posts/2023/programmable-badge/</link><pubDate>Fri, 16 Jun 2023 21:00:00 +0800</pubDate><guid>https://jduabe.dev/posts/2023/programmable-badge/</guid><description>&lt;p>&lt;a href="https://shop.pimoroni.com/products/badger-2040" class="external-link" target="_blank" rel="noopener">Badger2040&lt;/a> is a programmable E Paper/eInk/EPD badge, powered by
the &lt;a href="https://www.raspberrypi.com/products/rp2040" class="external-link" target="_blank" rel="noopener">RP2040&lt;/a>.&lt;/p>
&lt;p>Some of its features:&lt;/p>
&lt;ul>
&lt;li>&lt;em>2.9&amp;quot; black and white E InkÂ® display (296 x 128 pixels)&lt;/em>&lt;/li>
&lt;li>&lt;em>Powered by RP2040 (Dual Arm Cortex M0+ running at up to 133Mhz with 264kB of SRAM)&lt;/em>&lt;/li>
&lt;li>&lt;em>2MB of QSPI flash supporting XiP&lt;/em>&lt;/li>
&lt;li>&lt;em>Five front user buttons&lt;/em>&lt;/li>
&lt;li>&lt;em>Reset and boot buttons (the boot button can also be used as a user button)&lt;/em>&lt;/li>
&lt;li>&lt;em>USB-C connector for power and programming&lt;/em>&lt;/li>
&lt;li>&lt;em>JST-PH connector for attaching a battery (input range 2.7V - 6V)&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>I got one to play around with and to use as a digital lanyard / badge when attending meetups.&lt;/p>
&lt;h2 id="programming">
Programming
&lt;a class="heading-link" href="#programming">
&lt;i class="fa fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
&lt;span class="sr-only">Link to heading&lt;/span>
&lt;/a>
&lt;/h2>
&lt;p>The Badger2040 ships with a custom &lt;a href="https://micropython.org/" class="external-link" target="_blank" rel="noopener">MicroPython&lt;/a> build and a graphics library
&lt;a href="https://github.com/pimoroni/pimoroni-pico/blob/main/micropython/modules/picographics/README.md" class="external-link" target="_blank" rel="noopener">PicoGraphics&lt;/a> that
contains useful utilities for drawing on the screen. There are also a couple of examples loaded on the device by
default.&lt;/p>
&lt;p>In order to write code or update / run the existing code samples, you&amp;rsquo;ll need to connect it to your computer and open
up an IDE with MicroPython support i.e. &lt;a href="https://thonny.org/" class="external-link" target="_blank" rel="noopener">Thonny&lt;/a>.&lt;/p>
&lt;p>One thing to note is you opt to use a different IDE is to make sure to name the file as &lt;code>main.py&lt;/code> as it will be
automatically run once uploaded to the device (this is the default behavior of the RP2040), otherwise your code will not
be executed.&lt;/p>
&lt;p>I ended up using &lt;a href="https://www.jetbrains.com/pycharm/" class="external-link" target="_blank" rel="noopener">PyCharm&lt;/a> with the &lt;a href="https://plugins.jetbrains.com/plugin/9777-micropython" class="external-link" target="_blank" rel="noopener">MicroPython&lt;/a>
plugin, one extra step I needed to do was to point the plugin to the device which was located at &lt;code>/dev/ttyACM0&lt;/code>
(if you&amp;rsquo;re on a Unix environment).&lt;/p>
&lt;h2 id="drawing">
Drawing
&lt;a class="heading-link" href="#drawing">
&lt;i class="fa fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
&lt;span class="sr-only">Link to heading&lt;/span>
&lt;/a>
&lt;/h2>
&lt;p>With the following built-in functions, we can draw text and shapes on the screen.&lt;/p>
&lt;h3 id="constants">
Constants
&lt;a class="heading-link" href="#constants">
&lt;i class="fa fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
&lt;span class="sr-only">Link to heading&lt;/span>
&lt;/a>
&lt;/h3>
&lt;p>The screen dimensions are provided as constants.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">import&lt;/span> &lt;span class="nn">badger2040&lt;/span>
&lt;span class="n">WIDTH&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">badger2040&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">WIDTH&lt;/span> &lt;span class="c1"># 296&lt;/span>
&lt;span class="n">HEIGHT&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">badger2040&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">HEIGHT&lt;/span> &lt;span class="c1"># 128&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="pen">
Pen
&lt;a class="heading-link" href="#pen">
&lt;i class="fa fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
&lt;span class="sr-only">Link to heading&lt;/span>
&lt;/a>
&lt;/h3>
&lt;p>There are 16 pen colours - or &amp;ldquo;shades of grey&amp;rdquo; - to choose, from 0 (black) to 15 (white).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">import&lt;/span> &lt;span class="nn">badger2040&lt;/span>
&lt;span class="n">display&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">badger2040&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Badger2040&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">display&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_pen&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">colour&lt;/span> &lt;span class="c1"># int: color from 0 to 15&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The thickness of the lines drawn on the screen can be also be configured.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">import&lt;/span> &lt;span class="nn">badger2040&lt;/span>
&lt;span class="n">display&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">badger2040&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Badger2040&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">display&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_thickness&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">value&lt;/span> &lt;span class="c1"># int: thickness in pixels&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="text">
Text
&lt;a class="heading-link" href="#text">
&lt;i class="fa fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
&lt;span class="sr-only">Link to heading&lt;/span>
&lt;/a>
&lt;/h3>
&lt;p>The font can be changed with the &lt;code>set_font&lt;/code> method and write using the &lt;code>text&lt;/code> function.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">import&lt;/span> &lt;span class="nn">badger2040&lt;/span>
&lt;span class="n">display&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">badger2040&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Badger2040&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1"># Available fonts&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1"># Bitmap&lt;/span>
&lt;span class="c1"># - bitmap6&lt;/span>
&lt;span class="c1"># - bitmap8&lt;/span>
&lt;span class="c1"># - bitmap14_outline&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1"># Vector&lt;/span>
&lt;span class="c1"># - sans&lt;/span>
&lt;span class="c1"># - gothic&lt;/span>
&lt;span class="c1"># - cursive&lt;/span>
&lt;span class="c1"># - serif_italic&lt;/span>
&lt;span class="c1"># - serif&lt;/span>
&lt;span class="n">display&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_font&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">font&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">display&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">text&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># the text string to draw &lt;/span>
&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># the destination X coordinate&lt;/span>
&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># the destination Y coordinate&lt;/span>
&lt;span class="n">wordwrap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># number of pixels width before trying to break text into multiple lines&lt;/span>
&lt;span class="n">scale&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># size&lt;/span>
&lt;span class="n">angle&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># rotation angle (Vector only!)&lt;/span>
&lt;span class="n">spacing&lt;/span> &lt;span class="c1"># letter spacing&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="shapes">
Shapes
&lt;a class="heading-link" href="#shapes">
&lt;i class="fa fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
&lt;span class="sr-only">Link to heading&lt;/span>
&lt;/a>
&lt;/h3>
&lt;p>There are quite a few functions available here, I just included the ones I used. You can check out the full list in the
&lt;a href="https://github.com/pimoroni/pimoroni-pico/tree/main/micropython/modules/picographics" class="external-link" target="_blank" rel="noopener">Pico Graphics function reference&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Line&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">import&lt;/span> &lt;span class="nn">badger2040&lt;/span>
&lt;span class="n">display&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">badger2040&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Badger2040&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">display&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Rectangle&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">import&lt;/span> &lt;span class="nn">badger2040&lt;/span>
&lt;span class="n">display&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">badger2040&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Badger2040&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">display&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rectangle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="putting-it-all-together">
Putting it all together
&lt;a class="heading-link" href="#putting-it-all-together">
&lt;i class="fa fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
&lt;span class="sr-only">Link to heading&lt;/span>
&lt;/a>
&lt;/h2>
&lt;figure>
&lt;img src="https://res.cloudinary.com/j4ckofalltrades/image/upload/v1688813596/blog/badger2040_x9iaec.jpg" />
&lt;figcaption style="font-style:italic; text-align: center; font-size: 16px; padding-bottom: 20px;">
Badger2040 running the full "badge" code
&lt;/figcaption>
&lt;/figure>
&lt;script src="https://gist.github.com/j4ckofalltrades/a4ec95b3e077fd7c294d20ef8095f480.js">&lt;/script></description></item></channel></rss>